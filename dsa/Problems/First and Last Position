public class FirstAndLastPosition {
    public static void main(String[] args) {
        int[] nums = {5, 7, 7, 8, 8, 10};  // Input array
        int target = 8;  // Target number to search for

        // Call searchRange to find the first and last position of the target
        int[] ans = searchRange(nums, target);

        // Print the result
        System.out.println("[" + ans[0] + ", " + ans[1] + "]");
    }

    // Function to find the first and last occurrence of the target
    public static int[] searchRange(int[] nums, int target) {
        int[] ans = {-1, -1};  // Initialize result array to [-1, -1]
        
        // Find the first occurrence
        ans[0] = search(nums, target, true);
        
        // If the first occurrence is found, search for the last occurrence
        if (ans[0] != -1) {
            ans[1] = search(nums, target, false);
        }

        return ans;  // Return the result array
    }

    // This function finds the index of the target
    public static int search(int[] nums, int target, boolean findStartIndex) {
        int ans = -1;
        int start = 0;
        int end = nums.length - 1;

        // Binary search to find the target
        while (start <= end) {
            int mid = start + (end - start) / 2;

            if (target < nums[mid]) {
                end = mid - 1;
            } else if (target > nums[mid]) {
                start = mid + 1;
            } else {
                // Potential answer found
                ans = mid;

                // Adjust based on whether we're finding the first or last occurrence
                if (findStartIndex) {
                    end = mid - 1;  // Look for the first occurrence
                } else {
                    start = mid + 1;  // Look for the last occurrence
                }
            }
        }

        return ans;  // Return the index of the target
    }
}
